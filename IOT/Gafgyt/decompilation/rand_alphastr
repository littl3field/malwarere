//  disasm  -- show blocks  --  show stats

rand_alphastr(
    _unknown_ __v0,                        // r2
    char* __a0,                            // r4
    _unknown_ __a1,                        // r5
    intOrPtr __s0,                         // r16
    intOrPtr __s1,                         // r17
    intOrPtr __s2,                         // r18
    intOrPtr __s3,                         // r19
    intOrPtr __s4,                         // r20
    intOrPtr __s5,                         // r21
    _unknown_ __t9,                        // r25
    intOrPtr __ra                          // r31
)
{// addr = 0x00402D74
    intOrPtr _v8;                          // _cfa_fffffff8
    intOrPtr _v12;                         // _cfa_fffffff4
    intOrPtr _v16;                         // _cfa_fffffff0
    intOrPtr _v20;                         // _cfa_ffffffec
    intOrPtr _v24;                         // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    intOrPtr _v32;                         // _cfa_ffffffe0
    intOrPtr _v40;                         // _cfa_ffffffd8
    signed int _t46;                       // _t46
    signed int _t55;                       // _t55
    _unknown_ _t56;                        // _t56
    signed int _t57;                       // _t57
    _unknown_ _t58;                        // _t58
    intOrPtr _t69;                         // _t69
    intOrPtr _t72;                         // _t72
    unsigned int _t73;                     // _t73
    signed int* _t75;                      // _t75
    signed int* _t78;                      // _t78
    unsigned int* _t79;                    // _t79
    char* _t88;                            // _t88
    _unknown_ _t91;                        // _t91
    _unknown_ _t93;                        // _t93
    _unknown_ _t95;                        // _t95
    _unknown_ _t97;                        // _t97
    _unknown_ _t99;                        // _t99
    signed int _t103;                      // _t103
    signed int _t119;                      // _t119
    signed int _t120;                      // _t120

L0x00402D80:	    7, __sp = __sp + -56;
L0x00402D84:	    7, _v8 = __ra;
L0x00402D88:	    7, _v12 = __s5;
L0x00402D8C:	    7, _v16 = __s4;
L0x00402D90:	    7, _v20 = __s3;
L0x00402D94:	    7, _v24 = __s2;
L0x00402D98:	    7, _v28 = __s1;
L0x00402D9C:	    7, _v32 = __s0;
L0x00402DA0:	    7, _v40 = 0x572ec + __t9;
L0x00402DA8:	    7, _t88 = __a0;
L0x00402DB0:	    7, table_unlock_val(28, table_unlock_val);
L0x00402DD4:	    7, __t8 = table_retrieve_val(28, 0, table_retrieve_val);
L0x00402DD4:	    7, if(__a1 <= 0) {
L0x00402EBC:	L8:
L0x00402EBC:	        7, _t103 = table_lock_val;
L0x00402EC0:	L0x00402EC4:	        7, _t99 = _got[0x2c];
L0x00402EC8:	        7, _t97 = _got[0x28];
L0x00402ECC:	        7, _t95 = _got[0x24];
L0x00402ED0:	        7, _t93 = _got[0x20];
L0x00402ED4:	        7, _t91 = _got[0x1c];
L0x00402ED8:	        7, _t88 = _got[0x18];
L0x00402EDC:	L0x00402EE0:	        7, __sp = __sp + 56;
L0x00402EE0:	        7, goto ( *__t9);
L0x00000000:	    7, }
L0x00402DDC:	    7, _t97 = 4521984;
L0x00402DE0:	    7, _t99 = 4521984;
L0x00402DE8:	    7, __t6 =  *((intOrPtr*)(0x452054));
L0x00402DEC:	    7, __t7 =  *0x00452058;
L0x00402DF0:	    7, _t95 = 0x452438;
L0x00402DF4:	    7, _t103 = 18782;
L0x00402DF8:	    7, _t93 = -2;
L0x00402DFC:	    7, while(1) {
L0x00402DFC:	L2:
L0x00402DFC:	L0x00402E00:	L0x00402E00:	        7, _t54 = __t7 + 1;
L0x00402E00:	L0x00402E00:	        7, if(_t91 >= 4) {
L0x00000000:	            7, break;
        7, }
L0x00402EE8:	L0x00402EE8:	        7, __t7 = _t54 & 4095;
L0x00402EEC:	L0x00402EF0:	        7, _t78 = (__t7 << 2) + _t95;
L0x00402EF4:	L0x00402EF4:	L0x00402EF8:	L0x00402EFC:	L0x00402EFC:	L0x00402EFC:	        7, _t119 =  *_t78 * _t103 >> 32;
L0x00402F00:	        7, _t91 = _t91 + -1;
L0x00402F04:	        7, _t55 = _t119;
L0x00402F08:	        7, __t3 = _t55 + __t6;
L0x00402F0C:	L0x00402F10:	L0x00402F14:	L0x00402F18:	        7, _t69 = (_t55 < __t3) + _t119;
L0x00402F1C:	        7, _t56 = _t69 + __t3;
L0x00402F20:	L0x00402F24:	L0x00402F24:	        7, __t6 = _t69;
L0x00402F24:	L0x00402F24:	        7, if(_t69 >= _t56) {
L0x00402F2C:	L0x00402F2C:	            7, __t6 = _t69 + 1;
L0x00402F30:	            7, _t56 = _t56 + 1;
        7, }
L0x00402F34:	L0x00402F34:	        7, _t46 = _t93 - _t56;
L0x00402F38:	        7, _t54 = _t46 & 3;
L0x00402F3C:	L0x00402F3C:	        7,  *_t78 = _t46;
L0x00402F40:	L0x00402F40:	        7,  *_t88 = _t46 & 3;
L0x00402F44:	L0x00402F44:	        7, _t88 = _t88 + 1;
L0x00402F44:	        7, if(_t91 > 0) {
L0x00000000:	            7, continue;
        7, }
L0x00402F4C:	L0x00402F4C:	L0x00402F4C:	        7,  *((intOrPtr*)(_t97 + 8276)) = __t6;
L0x00402EB8:	L7:
L0x00402EB8:	L0x00402EB8:	        7,  *(_t99 + 8280) = __t7;
L0x00000000:	        7, goto L8;
    7, }
L0x00402E08:	    7, __t7 = _t54 & 4095;
L0x00402E10:	    7, _t79 = (__t7 << 2) + _t95;
L0x00402E1C:	    7, _t120 =  *_t79 * _t103 >> 32;
L0x00402E20:	    7, _t91 = _t91 + -4;
L0x00402E24:	    7, _t57 = _t120;
L0x00402E28:	    7, __t5 = _t57 + __t6;
L0x00402E38:	    7, _t72 = (_t57 < __t5) + _t120;
L0x00402E3C:	    7, _t58 = _t72 + __t5;
L0x00402E44:	    7, __t6 = _t72;
L0x00402E44:	    7, if(_t72 >= _t58) {
L0x00402E4C:	L0x00402E4C:	        7, _t58 = _t58 + 1;
L0x00402E50:	        7, __t6 = _t72 + 1;
    7, }
L0x00402E54:	    7, _t73 = _t93 - _t58;
L0x00402E60:	    7,  *_t79 = _t73;
L0x00402E74:	    7,  *_t88 =  *(__t8 + ((_t73 & 255) >> 3)) & 255;
L0x00402E88:	    7, _t88[1] =  *(__t8 + (_t73 >> 11 & 31)) & 255;
L0x00402E98:	    7, _t88[2] =  *(__t8 + (_t73 >> 19 & 31)) & 255;
L0x00402E9C:	    7, _t75 = __t8 + (_t73 >> 27);
L0x00402EA0:	    7, _t54 =  *_t75 & 255;
L0x00402EA8:	    7, _t88[3] =  *_t75 & 255;
L0x00402EAC:	    7, _t88 = _t88 + 4;
L0x00402EAC:	    7, if(_t91 > 0) {
L0x00000000:	        7, goto L2;
    7, } else {
L0x00402EB4:	L0x00402EB4:	L0x00402EB4:	        7,  *((intOrPtr*)(_t97 + 8276)) = __t6;
L0x00000000:	        7, goto L7;
    7, }
}

