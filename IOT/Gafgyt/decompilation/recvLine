//  disasm  -- show blocks  --  show stats

recvLine(
    signed int __a0,                       // r4
    intOrPtr __a1,                         // r5
    intOrPtr __a2,                         // r6
    intOrPtr __s0,                         // r16
    intOrPtr __s1,                         // r17
    intOrPtr __s2,                         // r18
    intOrPtr __s3,                         // r19
    intOrPtr __s4,                         // r20
    intOrPtr __s5,                         // r21
    intOrPtr __s6,                         // r22
    intOrPtr __s7,                         // r23
    _unknown_ __t9,                        // r25
    intOrPtr __s8,                         // r30
    intOrPtr __ra,                         // r31
    intOrPtr _a4,                          // _cfa_4
    intOrPtr _a8                           // _cfa_8
)
{// addr = 0x00401C74
    intOrPtr _v4;                          // _cfa_fffffffc
    intOrPtr _v8;                          // _cfa_fffffff8
    intOrPtr _v12;                         // _cfa_fffffff4
    intOrPtr _v16;                         // _cfa_fffffff0
    intOrPtr _v20;                         // _cfa_ffffffec
    intOrPtr _v24;                         // _cfa_ffffffe8
    intOrPtr _v28;                         // _cfa_ffffffe4
    intOrPtr _v32;                         // _cfa_ffffffe0
    intOrPtr _v36;                         // _cfa_ffffffdc
    intOrPtr _v40;                         // _cfa_ffffffd8
    char* _v48;                            // _cfa_ffffffd0
    char _v52;                             // _cfa_ffffffcc
    char _v180;                            // _cfa_ffffff4c
    char _v184;                            // _cfa_ffffff48
    char _v188;                            // _cfa_ffffff44
    signed int _v192;                      // _cfa_ffffff40
    intOrPtr _v200;                        // _cfa_ffffff38
    char* _v208;                           // _cfa_ffffff30
    intOrPtr* _t45;                        // _t45
    _unknown_ _t50;                        // _t50
    _unknown_ _t51;                        // _t51
    intOrPtr* _t53;                        // _t53
    signed int _t55;                       // _t55
    _unknown_ _t58;                        // _t58
    signed int _t59;                       // _t59
    char* _t80;                            // _t80
    char* _t82;                            // _t82
    signed int* _t84;                      // _t84
    char _t85;                             // _t85
    signed int* _t89;                      // _t89
    _unknown_ _t90;                        // _t90
    signed int _t101;                      // _t101

L0x00401C80:	    7, __sp = __sp + -224;
L0x00401C84:	    7, _v4 = __ra;
L0x00401C88:	    7, _v8 = __s8;
L0x00401C8C:	    7, _v12 = __s7;
L0x00401C90:	    7, _v16 = __s6;
L0x00401C94:	    7, _v20 = __s5;
L0x00401C98:	    7, _v24 = __s4;
L0x00401C9C:	    7, _v28 = __s3;
L0x00401CA0:	    7, _v32 = __s2;
L0x00401CA4:	    7, _v36 = __s1;
L0x00401CA8:	    7, _v40 = __s0;
L0x00401CAC:	    7, _v200 = 0x583ec + __t9;
L0x00401CB0:	    7, _a4 = __a1;
L0x00401CC4:	    7, _a8 = __a2;
L0x00401CC4:	    7, 0x00000000();
L0x00401CD8:	    7, _v188 = 30;
L0x00401CE0:	    7, _t45 =  &_v180;
L0x00401CE4:	    7, do {
L0x00401CE4:	L0x00401CE4:	L0x00401CE4:	        7,  *_t45 = 0;
L0x00401CE8:	        7, _t45 = _t45 + 4;
L0x00401CEC:	L0x00401CEC:	L0x00401CEC:	    7, } while(_t45 !=  &_v52);
L0x00401CFC:	    7, _t84 =  &(((char*)( &_v192))[__a0 >> 5]);
L0x00401D08:	    7, _t101 = 1 << __a0;
L0x00401D1C:	    7, _t84[3] = _t84[3] | _t101;
L0x00401D20:	    7, _v48 =  &_v188;
L0x00401D24:	    7, _v184 = 0;
L0x00401D28:	    7, _v208 =  &_v188;
L0x00401D38:	    7, select(__ra);
L0x00401D44:	    7, _t50 = _t84 < 10;
L0x00401D44:	    7, if( &_v188 <= 0) {
L0x00401E08:	L0x00401E08:	L0x00401E08:	        7, _t89 = _t84;
L0x00401E08:	L0x00401E08:	        7, if(_t50 != 0) {
L0x00401E10:	L0x00401E10:	L0x00401E14:	L0x00401E18:	            7, do {
L0x00401E18:	L0x00401E18:	L0x00401E18:	                7, _v188 = 30;
L0x00401E1C:	                7, _t53 =  &_v180;
L0x00401E20:	                7, do {
L0x00401E20:	L0x00401E20:	L0x00401E20:	                    7,  *_t53 = 0;
L0x00401E24:	                    7, _t53 = _t53 + 4;
L0x00401E28:	L0x00401E28:	L0x00401E28:	                7, } while(_t53 !=  &_v52);
L0x00401E30:	L0x00401E30:	L0x00401E30:	L0x00401E34:	L0x00401E38:	L0x00401E3C:	                7, _t55 = _t101 | _t89[3];
L0x00401E40:	L0x00401E40:	                7, _t89[3] = _t55;
L0x00401E44:	L0x00401E44:	                7, _v184 = 0;
L0x00401E48:	L0x00401E48:	                7, _v208 = _got[0xb0];
L0x00401E4C:	L0x00401E50:	L0x00401E54:	L0x00401E54:	                7, select(__ra);
L0x00401E5C:	L0x00401E60:	L0x00401E60:	                7, _t84 =  &(_t84[0]);
L0x00401E60:	                7, if(_t55 > 0) {
L0x00000000:	                    7, goto L3;
                7, } else {
L0x00000000:	                    7, goto L17;
                7, }
L0x00000000:	                7, goto L19;
L0x00401E68:	L17:
L0x00401E68:	L0x00401E68:	            7, } while(_t84 != 10);
L0x00401E70:	        7, }
L0x00000000:	L19:
    7, }
L0x00401D4C:	L3:
L0x00401D4C:	    7, _t58 = _got[0xe8];
L0x00401D54:	    7, _t51 = _t58 < 2;
L0x00401D58:	    7, _t90 = _t58 + -1;
L0x00401D58:	    7, if(_t51 != 0) {
L0x00401DC8:	L0x00401DC8:	        7, _t80 = _got[0xe4];
L0x00401DCC:	        7, _t85 = 0;
L0x00000000:	        7, goto L10;
    7, } else {
L0x00401D60:	L0x00401D60:	L0x00401D64:	        7, _t82 = _got[0xe4];
L0x00401D68:	        7, _t85 = 0;
L0x00401D6C:	L0x00401D70:	L0x00401D98:	        7, while(1) {
L0x00401D98:	L0x00401D98:	L0x00401D9C:	L0x00401D9C:	L0x00401DA0:	L0x00401DA4:	L0x00401DA8:	L0x00401DA8:	            7, recv(__ra);
L0x00401DB0:	L0x00401DB4:	L0x00401DB4:	L0x00401DB4:	            7, if(_t51 != 1) {
L0x00000000:	                7, break;
            7, }
L0x00401D78:	L0x00401D78:	L0x00401D78:	L0x00401D78:	            7, _t59 = _v192 & 255;
L0x00401D80:	L0x00401D80:	            7,  *_t82 = _t59;
L0x00401D84:	L0x00401D84:	            7, _t80 = _t82 + 1;
L0x00401D84:	L0x00401D84:	            7, if(_t59 == 10) {
L0x00401DD0:	L10:
L0x00401DD0:	L0x00401DD0:	                7,  *_t80 = 0;
            7, } else {
L0x00401D8C:	L0x00401D8C:	                7, _t85 = _t85 + 1;
L0x00401D90:	L0x00401D90:	L0x00401D90:	                7, if(_t85 == _t90) {
L0x00000000:	                    7, goto L10;
                7, } else {
L0x00000000:	                    7, continue;
                7, }
            7, }
L0x00000000:	            7, goto L11;
        7, }
L0x00401DBC:	L0x00401DBC:	        7, _t85 = -1;
L0x00401DC0:	L0x00401DC0:	        7,  *_t80 = 0;
    7, }
L0x00401DD4:	L11:
L0x00401E00:	    7, __sp = __sp + 224;
L0x00401E00:	    7, return _t85;
L0x00000000:	    7, goto L19;
}

